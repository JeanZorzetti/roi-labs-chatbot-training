# Easypanel Configuration for ROI Labs Chatbot Training
# Optimized for production deployment with modern React dashboard

name: roi-labs-chatbot-training
services:
  app:
    # Main application service
    image:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    
    # Environment variables for production
    env:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      
      # Database (configure these in Easypanel environment)
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      
      # Optional: External APIs (configure if needed)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      
      # Security
      JWT_SECRET: ${JWT_SECRET}
      RATE_LIMIT_MAX: 1000
      RATE_LIMIT_WINDOW: 900000
      
      # CORS for production
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      
      # Optional: Redis for caching
      REDIS_URL: ${REDIS_URL}
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
    
    # Ports
    ports:
      - "3000:3000"
    
    # Volumes for persistence (optional)
    volumes:
      - logs:/app/logs
      - uploads:/app/uploads
    
    # Restart policy
    restart: unless-stopped
    
    # Labels for Easypanel
    labels:
      - "easypanel.enabled=true"
      - "easypanel.project=roi-labs-chatbot-training"
      - "easypanel.service=app"

# Named volumes
volumes:
  logs:
    driver: local
  uploads:
    driver: local

# Networks
networks:
  default:
    name: roi-labs-network
    external: false