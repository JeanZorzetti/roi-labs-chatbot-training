version: '3.8'

services:
  roi-chatbot:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: roi-chatbot-training
    restart: unless-stopped
    
    # Variáveis de ambiente
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
    
    # Mapear arquivo .env
    env_file:
      - .env.production
    
    # Portas - Usando porta 3001 consistentemente
    ports:
      - "3001:3001"
    
    # Volumes para persistência
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    
    # Configurações de recursos
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Configurações de rede
    networks:
      - roi-network
    
    # Health check usando healthcheck.js (sem dependência de curl)
    healthcheck:
      test: ["CMD", "node", "/app/healthcheck.js"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 45s

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: roi-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    
    depends_on:
      roi-chatbot:
        condition: service_healthy
    
    networks:
      - roi-network
    
    # Health check para nginx usando método mais confiável
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  roi-network:
    driver: bridge

volumes:
  logs:
    driver: local
